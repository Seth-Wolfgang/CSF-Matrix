#cmake_minimum_required(VERSION 3.15...3.26)
#project(PyVSparse LANGUAGES CXX)

#find_package(pybind11 REQUIRED)  # or add_subdirectory(pybind11)

#set(PROJECT_ROOT "${CMAKE_SOURCE_DIR}/..")
#set(IVSPARSE "{PROJECT_ROOT}/IVSparse")
#set(SparseMatrix "{PROJECT_ROOT}/IVSparse/SparseMatrix")

#link_directories(${PROJECT_ROOT})


#pybind11_add_module(PyVSparse ${CMAKE_SOURCE_DIR}/PyVSparse.cpp)

#add_library(IVSparse STATIC ${IVSparse}SparseMatrix)

#target_link_libraries(PyVSparse PRIVATE pybind11::module pybind11::lto pybind11::windows_extras SparseMatrix )


#pybind11_extension(PyVSparse)

#if(NOT MSVC AND NOT ${CMAKE_BUILD_TYPE} MATCHES Debug|RelWithDebInfo)
    # Strip unnecessary sections of the binary on Linux/macOS
#    pybind11_strip(PyVSparse)
#endif()



#set_target_properties(PyVSparse PROPERTIES CXX_VISIBILITY_PRESET "hidden"
#                                         CUDA_VISIBILITY_PRESET "hidden")
#target_compile_definitions(PyVSparse PRIVATE VERSION_INFO=${EXAMPLE_VERSION_INFO})

#cmake_minimum_required(VERSION 3.4...3.18)
#project(PyVSparse)

#add_subdirectory(pybind11)
#pybind11_add_module(PyVSparse PyVSparse.cpp)

# EXAMPLE_VERSION_INFO is defined by setup.py and passed into the C++ code as a
# define (VERSION_INFO) here.
#target_compile_definitions(PyVSparse
#                           PRIVATE VERSION_INFO=${EXAMPLE_VERSION_INFO})



cmake_minimum_required(VERSION 2.8.12)
project(pyvsparse)

set (CMAKE_CXX_STANDARD 14)

set(IVSPARSE "${CMAKE_SOURCE_DIR}/../IVSparse")

# Add main source dir
include_directories(${IVSPARSE})

# Add a shared library for C++ source
file(GLOB_RECURSE IVSPARSE_SOURCE ${IVSPARSE}/*)
add_library(ivsparse SHARED ${IVSPARSE_SOURCE})

# Add wrapper dir
include_directories(${CMAKE_CURRENT_SOURCE_DIR})

# Add PyBind and Python headers
set(PYBIND11_PYTHON_VERSION 3)
set(PYBIND11_CPP_STANDARD -std=c++17)
add_subdirectory(pybind11)
include_directories(${PYTHON_INCLUDE_DIRS})

# Add the autogenerated files to the module target
file(GLOB MODULE_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/wrapper/math_funcs/*.cpp)
add_library(_pyshapes_math_funcs SHARED ${MODULE_SOURCES})
target_link_libraries(_pyshapes_math_funcs PRIVATE pybind11::module shapes)
file(GLOB MODULE_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/wrapper/geometry/*.cpp)
add_library(_pyshapes_geometry SHARED ${MODULE_SOURCES})
target_link_libraries(_pyshapes_geometry PRIVATE pybind11::module shapes)
file(GLOB MODULE_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/wrapper/primitives/*.cpp)
add_library(_pyshapes_primitives SHARED ${MODULE_SOURCES})
target_link_libraries(_pyshapes_primitives PRIVATE pybind11::module shapes)

# Set suitable extensions and put the module into a suitable location in the package
set_target_properties(_pyshapes_math_funcs PROPERTIES PREFIX "${PYTHON_MODULE_PREFIX}"
                                         SUFFIX "${PYTHON_MODULE_EXTENSION}" 
                                         LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/pyshapes/math_funcs/)

set_target_properties(_pyshapes_geometry PROPERTIES PREFIX "${PYTHON_MODULE_PREFIX}"
                                         SUFFIX "${PYTHON_MODULE_EXTENSION}" 
                                         LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/pyshapes/geometry/)

set_target_properties(_pyshapes_primitives PROPERTIES PREFIX "${PYTHON_MODULE_PREFIX}"
                                         SUFFIX "${PYTHON_MODULE_EXTENSION}" 
                                         LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/pyshapes/primitives/)
