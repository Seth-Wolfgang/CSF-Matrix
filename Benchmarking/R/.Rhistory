ls
clear
load("~/vscode/research/SRLE/Benchmarking/.RData")
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/debruinz/Downloads") # never hard-code directories in Rmarkdowns, except this
data <- read.csv("benchmarking.csv") # or whatever you saved it as
pwd
setwd("~/vscode/research/SRLE/Benchmarking")
ls
pwd
clear
ls
setwd("C:/Users/debruinz/Downloads") # never hard-code directories in Rmarkdowns, except this
data <- read.csv("benchmarking.csv") # or whatever you saved it as
getwd
getwd()
setwd("~/vscode/research/SRLE/Benchmarking")
data <- read.csv("benchmarking.csv") # or whatever you saved it as
knitr::opts_chunk$set(echo = TRUE)
setwd("~/vscode/research/SRLE/Benchmarking")
data <- read.csv("timeData.csv") # or whatever you saved it as
#move annoying offset from reading in matrix number as rownames
colnames(data) <- c(colnames(data)[-1], "")
# delete useless column
data <- data[,-ncol(data)]
plot_data <- data.frame("redundancy" = data$Matrix.Redundancy, "CSF2" = data$Avg.CSF2.Memory.Usage / data$Avg.Eigen.Memory.Usage, "CSF3" = data$Avg.CSF3.Memory.Usage / data$Avg.Eigen.Memory.Usage)
plot_data <- reshape2::melt(plot_data, id.vars = "redundancy")
install.packages("reshape2")
plot_data <- data.frame("redundancy" = data$Matrix.Redundancy, "CSF2" = data$Avg.CSF2.Memory.Usage / data$Avg.Eigen.Memory.Usage, "CSF3" = data$Avg.CSF3.Memory.Usage / data$Avg.Eigen.Memory.Usage)
plot_data <- reshape2::melt(plot_data, id.vars = "redundancy")
colnames(plot_data) <- c("redundancy", "format", "compression_ratio")
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
plot_data <- data.frame("redundancy" = data$Matrix.Redundancy, "CSF2" = data$Avg.CSF2.Memory.Usage / data$Avg.Eigen.Memory.Usage, "CSF3" = data$Avg.CSF3.Memory.Usage / data$Avg.Eigen.Memory.Usage)
plot_data <- reshape2::melt(plot_data, id.vars = "redundancy")
colnames(plot_data) <- c("redundancy", "format", "compression_ratio")
library(ggplot2)
ggplot(plot_data, aes(redundancy, compression_ratio, color = format)) + geom_point() + theme_classic() + theme(aspect.ratio = 1) + labs(x = "Matrix redundancy", y = "Compression Ratio vs. CSC Format", color = "Matrix Format")
plot_data <- data.frame("Eigen" = data$Avg.Eigen.Memory.Usage, "CSF2" = data$Avg.CSF2.Memory.Usage, "redundancy" = data$Matrix.Redundancy)
ggplot(plot_data, aes(Eigen, CSF2, color = redundancy)) + geom_point() + theme_classic() + theme(aspect.ratio = 1) + labs(x = "Size of Eigen matrix", y = "Size of CSF2 matrix", color = "Matrix redundancy") + scale_color_viridis_c(option = "B", end = 0.8) + scale_y_continuous(trans = "log10") + scale_x_continuous(trans = "log10") + geom_abline(slope = 1)
plot_data <- data.frame("Eigen" = data$Avg.Eigen.Memory.Usage, "CSF3" = data$Avg.CSF3.Memory.Usage, "redundancy" = data$Matrix.Redundancy)
ggplot(plot_data, aes(Eigen, CSF3, color = redundancy)) + geom_point() + theme_classic() + theme(aspect.ratio = 1) + labs(x = "Size of Eigen matrix", y = "Size of CSF3 matrix", color = "Matrix redundancy") + scale_color_viridis_c(option = "B", end = 0.8) + scale_y_continuous(trans = "log10") + scale_x_continuous(trans = "log10") + geom_abline(slope = 1)
df <- data.frame("csf2" = data$Avg.CSF2.InnerIterator.Time / data$Avg.Eigen.InnerIterator.Time,
"csf3" = data$Avg.CSF3.InnerIterator.Time / data$Avg.Eigen.InnerIterator.Time)
df <- reshape2::melt(df)
colnames(df) <- c("format", "time")
ggplot(df, aes(format, time)) +  theme_classic() + scale_y_continuous(expand = c(0, 0), limits = c(0, 2)) + geom_jitter(width = 0.1, size = 0.5, color = "#a0a0a0") + geom_boxplot(outlier.size = 0) + geom_hline(yintercept = 1, linetype = "dashed", color = "blue") + labs(x = "format", y = "Iterator speed vs. Eigen CSC Iterator") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
df <- reshape2::melt(df, id.vars = c("nnzpercol"))
df <- data.frame("csf2" = data$Avg.CSF2.Scalar.Multiplication.Time / data$Avg.Eigen.Scalar.Multiplication.Time,
"csf3" = data$Avg.CSF3.Scalar.Multiplication.Time / data$Avg.Eigen.Scalar.Multiplication.Time)
df <- reshape2::melt(df)
colnames(df) <- c("format", "time")
ggplot(df, aes(format, time)) +  theme_classic() + scale_y_continuous(expand = c(0, 0), trans = "log10") + geom_jitter(width = 0.1, size = 0.5, color = "#a0a0a0") + geom_boxplot(outlier.size = 0) + geom_hline(yintercept = 1, linetype = "dashed", color = "blue") + labs(x = "format", y = "Scalar multiplication time vs. Eigen") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave("plot.png", width = 2, height = 4, units = "in", dpi = 300)
df <- data.frame("csf2" = data$Avg.CSF2.Vector.Multiplication.Time / data$Avg.Eigen.Vector.Multiplication.Time,
"csf3" = data$Avg.CSF3.Vector.Multiplication.Time / data$Avg.Eigen.Vector.Multiplication.Time)
df <- reshape2::melt(df)
colnames(df) <- c("format", "time")
ggplot(df, aes(format, time)) +  theme_classic() + scale_y_continuous(expand = c(0, 0), limits = c(0, 5)) + geom_jitter(width = 0.1, size = 0.5, color = "#a0a0a0") + geom_boxplot(outlier.size = 0) + geom_hline(yintercept = 1, linetype = "dashed", color = "blue") + labs(x = "format", y = "Vector multiplication time vs. Eigen") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave("plot.png", width = 2, height = 4, units = "in", dpi = 300)
df <- data.frame("csf2" = data$Avg.CSF2.Constructor.Time,
"csf3" = data$Avg.CSF3.Constructor.Time,
"Eigen" = data$Avg.Eigen.Constructor.Time,
"nonzeros" = data$Matrix.Nonzeros)
ggplot(df, aes(Eigen / 1e9, csf2 / 1e9, color = nonzeros)) + geom_point() + scale_y_continuous(trans = "log10") + scale_x_continuous(trans = "log10") + theme_classic() + coord_fixed() + scale_color_viridis_c(option = "B", end = 0.9, trans = "log10") + labs(x = "Eigen (sec)", y = "CSF2 (sec)", title = "Time to construct matrix") + geom_abline(slope = 1, linetype = "dashed", color = "blue") + theme(plot.title = element_text(hjust = 0.5))
ggsave("plot.png", width = 4, height = 4, units = "in", dpi = 300)
ggplot(df, aes(csf2 / Eigen, csf3 / Eigen, color = nonzeros)) + geom_point()  + theme_classic() + scale_color_viridis_c(option = "B", end = 0.9, trans = "log10") + labs(x = "CSF2 (sec)", y = "CSF3 (sec)", title = "Time to construct matrix") + geom_abline(slope = 1, linetype = "dashed", color = "blue") + theme(plot.title = element_text(hjust = 0.5)) + scale_x_continuous(limits = c(0, 1.2)) + scale_y_continuous(limits = c(0, 1.2))
